{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\napi.interceptors.response.use(response => response.data, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'An unknown error occurred';\n  return Promise.reject(new Error(message));\n});\nexport const taskAPI = {\n  healthCheck: () => api.get('/health'),\n  getTasks: () => api.get('/tasks'),\n  getTask: id => api.get(`/tasks/${id}`),\n  createTask: data => api.post('/tasks', data),\n  updateTask: (id, data) => api.put(`/tasks/${id}`, data),\n  deleteTask: id => api.delete(`/tasks/${id}`),\n  getStats: () => api.get('/tasks/stats')\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","interceptors","response","use","data","error","_error$response","_error$response$data","message","Promise","reject","Error","taskAPI","healthCheck","get","getTasks","getTask","id","createTask","post","updateTask","put","deleteTask","delete","getStats"],"sources":["C:/xampp/htdocs/project utama/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: { 'Content-Type': 'application/json' },\r\n  timeout: 10000\r\n});\r\n\r\napi.interceptors.response.use(\r\n  (response) => response.data,\r\n  (error) => {\r\n    const message = error.response?.data?.error || error.message || 'An unknown error occurred';\r\n    return Promise.reject(new Error(message));\r\n  }\r\n);\r\n\r\nexport const taskAPI = {\r\n  healthCheck: () => api.get('/health'),\r\n  getTasks: () => api.get('/tasks'),\r\n  getTask: (id) => api.get(`/tasks/${id}`),\r\n  createTask: (data) => api.post('/tasks', data),\r\n  updateTask: (id, data) => api.put(`/tasks/${id}`, data),\r\n  deleteTask: (id) => api.delete(`/tasks/${id}`),\r\n  getStats: () => api.get('/tasks/stats')\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC/CC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFP,GAAG,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,CAACE,IAAI,EAC1BC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACT,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAIA,KAAK,CAACG,OAAO,IAAI,2BAA2B;EAC3F,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACH,OAAO,CAAC,CAAC;AAC3C,CACF,CAAC;AAED,OAAO,MAAMI,OAAO,GAAG;EACrBC,WAAW,EAAEA,CAAA,KAAMpB,GAAG,CAACqB,GAAG,CAAC,SAAS,CAAC;EACrCC,QAAQ,EAAEA,CAAA,KAAMtB,GAAG,CAACqB,GAAG,CAAC,QAAQ,CAAC;EACjCE,OAAO,EAAGC,EAAE,IAAKxB,GAAG,CAACqB,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;EACxCC,UAAU,EAAGd,IAAI,IAAKX,GAAG,CAAC0B,IAAI,CAAC,QAAQ,EAAEf,IAAI,CAAC;EAC9CgB,UAAU,EAAEA,CAACH,EAAE,EAAEb,IAAI,KAAKX,GAAG,CAAC4B,GAAG,CAAC,UAAUJ,EAAE,EAAE,EAAEb,IAAI,CAAC;EACvDkB,UAAU,EAAGL,EAAE,IAAKxB,GAAG,CAAC8B,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;EAC9CO,QAAQ,EAAEA,CAAA,KAAM/B,GAAG,CAACqB,GAAG,CAAC,cAAc;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}