{"ast":null,"code":"import { taskAPI } from './api';\n\n// Register user\nconst register = async userData => {\n  const response = await taskAPI.register(userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Login user\nconst login = async userData => {\n  const response = await taskAPI.login(userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Logout user\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\n// Update password\nconst updatePassword = async passwordData => {\n  const response = await taskAPI.updatePassword(passwordData);\n  return response;\n};\n\n// -- FUNGSI BARU --\nconst updateUsername = async usernameData => {\n  const response = await taskAPI.updateUsername(usernameData);\n  if (response.data) {\n    // Perbarui data user di localStorage dengan data & token baru dari backend\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response;\n};\nconst authService = {\n  register,\n  login,\n  logout,\n  updatePassword,\n  updateUsername // <-- Tambahkan ini\n};\nexport default authService;","map":{"version":3,"names":["taskAPI","register","userData","response","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","updatePassword","passwordData","updateUsername","usernameData","authService"],"sources":["C:/xampp/htdocs/project utama/frontend/src/services/authService.js"],"sourcesContent":["import { taskAPI } from './api';\r\n\r\n// Register user\r\nconst register = async (userData) => {\r\n  const response = await taskAPI.register(userData);\r\n  if (response.data) {\r\n    localStorage.setItem('user', JSON.stringify(response.data));\r\n  }\r\n  return response.data;\r\n};\r\n\r\n// Login user\r\nconst login = async (userData) => {\r\n  const response = await taskAPI.login(userData);\r\n  if (response.data) {\r\n    localStorage.setItem('user', JSON.stringify(response.data));\r\n  }\r\n  return response.data;\r\n};\r\n\r\n// Logout user\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// Update password\r\nconst updatePassword = async (passwordData) => {\r\n  const response = await taskAPI.updatePassword(passwordData);\r\n  return response;\r\n};\r\n\r\n// -- FUNGSI BARU --\r\nconst updateUsername = async (usernameData) => {\r\n  const response = await taskAPI.updateUsername(usernameData);\r\n  if (response.data) {\r\n    // Perbarui data user di localStorage dengan data & token baru dari backend\r\n    localStorage.setItem('user', JSON.stringify(response.data));\r\n  }\r\n  return response;\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  updatePassword,\r\n  updateUsername, // <-- Tambahkan ini\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;;AAE/B;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,MAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAAC;EACjD,IAAIC,QAAQ,CAACC,IAAI,EAAE;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC7D;EACA,OAAOD,QAAQ,CAACC,IAAI;AACtB,CAAC;;AAED;AACA,MAAMK,KAAK,GAAG,MAAOP,QAAQ,IAAK;EAChC,MAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACS,KAAK,CAACP,QAAQ,CAAC;EAC9C,IAAIC,QAAQ,CAACC,IAAI,EAAE;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC7D;EACA,OAAOD,QAAQ,CAACC,IAAI;AACtB,CAAC;;AAED;AACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;EACnBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;;AAED;AACA,MAAMC,cAAc,GAAG,MAAOC,YAAY,IAAK;EAC7C,MAAMV,QAAQ,GAAG,MAAMH,OAAO,CAACY,cAAc,CAACC,YAAY,CAAC;EAC3D,OAAOV,QAAQ;AACjB,CAAC;;AAED;AACA,MAAMW,cAAc,GAAG,MAAOC,YAAY,IAAK;EAC7C,MAAMZ,QAAQ,GAAG,MAAMH,OAAO,CAACc,cAAc,CAACC,YAAY,CAAC;EAC3D,IAAIZ,QAAQ,CAACC,IAAI,EAAE;IACjB;IACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC7D;EACA,OAAOD,QAAQ;AACjB,CAAC;AAED,MAAMa,WAAW,GAAG;EAClBf,QAAQ;EACRQ,KAAK;EACLC,MAAM;EACNE,cAAc;EACdE,cAAc,CAAE;AAClB,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}